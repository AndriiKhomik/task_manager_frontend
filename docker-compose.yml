# version: '3.9'

services:
  nginx:
    depends_on:
      - client
      - server
    image: andriikhomik/taskify-app:nginx-latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    networks:
      - node-network

  client:
    depends_on:
      - server
    image: andriikhomik/taskify-app:client-latest
    build: 
      args:
        - REACT_APP_API_BASE_URL=$CLIENT_API_BASE_URL
    env_file: ./.env
    container_name: client
    environment:
      - REACT_APP_API_BASE_URL=$CLIENT_API_BASE_URL
    ports:
      - $REACT_LOCAL_PORT:$REACT_DOCKER_PORT
    stdin_open: true
    tty: true
    networks:
      - node-network

  server:
    image: andriikhomik/taskify-app:server-latest
    container_name: server
    restart: always
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - CLIENT_ORIGIN=$CLIENT_ORIGIN
      - DATABASE_USER=$DATABASE_USER
      - DATABASE_PASSWORD=$DATABASE_PASSWORD
    networks:
      - node-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    network_mode: "host"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - prometheus-data:/prometheus
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - cadvisor
      - node_exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command: 
      - "--path.rootfs=/host"
    network_mode: "host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    network_mode: "host"
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /run:/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped
  
volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  node-network:

